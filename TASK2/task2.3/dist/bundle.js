(()=>{"use strict";var e={941:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Menu=void 0,o.Menu=class{constructor(){this.active=!0,this.consoleNumber=-1,this.consoleString="error"}close(){this.active=!1}isActive(){return this.active}printMenu(){console.log("\n  ###################################################\n  # Opciones:                                       #\n  #  1) Agregar Mentor                              #\n  #  2) Agregar Estudiante                          #\n  #  3) Agregar Conferencia                         #\n  #  4) Ver lista de Conferencias                   #\n  #  5) Ver lista de Conferencias por profesores    #\n  #  6) Registrarse en una conferencia              #\n  #  7) Esta opción es un ejemplo, ¿quieres probar? #\n  #  0) Salir.                                      #\n  ###################################################\n    ")}ask(){return new Promise(((e,o)=>{process.stdin.once("data",(o=>{let t=o.toString().trim();e(t)}))}))}async getInt(e){console.log(e);const o=await this.ask();return parseInt(`${o}`)}async getString(e){return console.log(e),`${await this.ask()}`}}},130:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Persona=void 0,o.Persona=class{constructor(e,o){this.nombre=e,this.correo=o,this.nombre=e,this.correo=o}}},120:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.registraseEvento=o.proyectarEventosMentor=o.getEventos=o.comprobarCorreo=o.crearEstudiante=o.crearMentor=void 0;const r=t(407),n=t(301),s=t(686),a=t(143),i=t(301);function l(e,o,t){!function(e){let o={nombreEvento:e.getNombre(),correoCreadorEvento:e.getCreador(),capacidad:e.capacidad};i.listaEvento.push(o),console.log("Evento registrado con exito"),console.log("============================")}(new a.Evento(e,o,t))}o.crearMentor=function(e,o){!function(e){let o={Nombre:e.getNombre(),Correo:e.getCorreo()};if(0==n.listaMentores.length)n.listaMentores.push(o),console.log("Registrado con exito"),console.log("============================");else for(let e of n.listaMentores){if(e.Correo==o.Correo){console.log(e.Correo),console.log("El correo ya se encuentra vinculado a un mentor"),console.log("porfavor intentelo de nuevo"),console.log("============");break}n.listaMentores.push(o),console.log("Registrado con exito"),console.log("============================");break}}(new r.Mentor(e,o))},o.crearEstudiante=function(e,o){!function(e){let o={Nombre:e.getNombre(),Correo:e.getCorreo()};if(0==n.listaEstudiantes.length)n.listaEstudiantes.push(o),console.log("Registrado con exito"),console.log("============================");else for(let e of n.listaEstudiantes){if(e.Correo==o.Correo){console.log("El correo ya se encuentra vinculado a un estudiante"),console.log("porfavor intentelo de nuevo"),console.log("============");break}n.listaEstudiantes.push(o),console.log("Registrado con exito"),console.log("============================");break}}(new s.Estudiante(e,o))},o.comprobarCorreo=function(e,o,t){if(0==n.listaMentores.length)console.log("No puedes crear un evento si no estas registrado como mentor"),console.log("============================");else for(let r of n.listaMentores)if(r.Correo==e){let e=n.listaMentores.indexOf(r);l(o,t,n.listaMentores[e].Correo)}else console.log("El correo no esta registrado a ningun mentor"),console.log("============================")},o.getEventos=function(){console.table(i.listaEvento)},o.proyectarEventosMentor=function(e){var o=i.listaEvento.map((function(o){if(o.correoCreadorEvento==e)return o}));console.table(o)},o.registraseEvento=function(e,o){for(let t of i.listaEvento)if(t.nombreEvento==e){if(t.capacidad>0){t.capacidad-=1;let r={nombreEvento:e,nombreEstudiante:o};i.listaRegistradosEvento.push(r),console.log("registrado de manera exitosa")}}else console.log("El correo no esta registrado a ningun mentor"),console.log("============================")}},301:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.listaRegistradosEvento=o.listaEvento=o.listaEstudiantes=o.listaMentores=void 0,o.listaMentores=[],o.listaEstudiantes=[],o.listaEvento=[],o.listaRegistradosEvento=[]},686:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Estudiante=void 0;const r=t(130);class n extends r.Persona{constructor(e,o){super(e,o)}getNombre(){return this.nombre}getCorreo(){return this.correo}permisos(){return!1}}o.Estudiante=n},143:(e,o)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Evento=void 0,o.Evento=class{constructor(e,o,t){this.nombreEvento=e,this.capacidad=o,this.creador=t}getCreador(){return this.creador}getNombre(){return this.nombreEvento}}},407:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Mentor=void 0;const r=t(130);class n extends r.Persona{constructor(e,o){super(e,o)}getNombre(){return this.nombre}getCorreo(){return this.correo}permisos(){return!0}}o.Mentor=n}},o={};function t(r){var n=o[r];if(void 0!==n)return n.exports;var s=o[r]={exports:{}};return e[r](s,s.exports,t),s.exports}(()=>{const e=t(941),o=t(120),r=(e,o)=>{console.log(`\n  \n  Haz ingresado el texto: ${e}  y el número ${o}\n  \n  `)};(async()=>{const t=new e.Menu;for(;t.isActive();){t.printMenu();let e=await t.getInt("seleccione un número de la lista:");switch(e){case 0:console.log("0: ",e),t.close(),process.exit();break;case 1:let n=await t.getString("ingrese el nombre"),s=await t.getString("Ingrese el correo");(0,o.crearMentor)(n,s);break;case 2:let a=await t.getString("ingrese el nombre"),i=await t.getString("Ingrese el correo");(0,o.crearEstudiante)(a,i);break;case 3:let l=await t.getString("ingrese el nombre del evento"),c=await t.getString("Ingrese el correo del mentor a crear el evento");const g=20;(0,o.comprobarCorreo)(c,l,g);break;case 4:(0,o.getEventos)();break;case 5:let u=await t.getString("Ingrese el correo del mentor a crear el evento");(0,o.proyectarEventosMentor)(u);break;case 6:let d=await t.getString("ingrese el nombre del evento"),v=await t.getString("ingrese su correo de estudiante");(0,o.registraseEvento)(d,v);break;case 7:const p=await t.getString("ingresa un texto cualquiera, luego preciona enter"),b=await t.getInt("ingresa un número, luego preciona enter");r(p,b);break;default:console.log("Debe elegir una opción valida")}}console.log("Adios")})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,